set nocompatible | filetype indent plugin on | syn on

fun! SetupVAM()
  let c = get(g:, 'vim_addon_manager', {})
  let g:vim_addon_manager = c
  let c.plugin_root_dir = expand('$HOME', 1) . '/.vim/vim-addons'
  " most used options you may want to use:
  " let c.log_to_buf = 1
  " let c.auto_install = 0
  let &rtp.=(empty(&rtp)?'':',').c.plugin_root_dir.'/vim-addon-manager'
  if !isdirectory(c.plugin_root_dir.'/vim-addon-manager/autoload')
    execute '!git clone --depth=1 https://github.com/MarcWeber/vim-addon-manager '
          \       shellescape(c.plugin_root_dir.'/vim-addon-manager', 1)
  endif
  call vam#ActivateAddons([], {'auto_install' : 0})
    call vam#ActivateAddons(['powerline'])
endfun

let g:vim_addon_manager = {'scms': {'git': {}}}
fun! MyGitCheckout(repository, targetDir)
  let a:repository.url = substitute(a:repository.url, '^git://github', 'http://github', '')
  return vam#utils#RunShell('git clone --depth=1 $.url $p', a:repository, a:targetDir)
endfun
let g:vim_addon_manager.scms.git.clone=['MyGitCheckout']

call SetupVAM()
VAMActivate The_NERD_tree jellybeans vim-addon-commenting vim-autoformat github:sickill/vim-monokai tlib vim-snippets snipmate matchit.zip github:airblade/vim-gitgutter Tagbar powerline fugitive github:editorconfig/editorconfig-vim github:tpope/vim-cucumber github:digitaltoad/vim-jade github:kristijanhusak/vim-multiple-cursors vim-ruby github:ctrlpvim/ctrlp.vim github:geekjuice/vim-spec vim-airline github:digitaltoad/vim-pug 

colorscheme jellybeans


set backspace=indent,eol,start
set t_ut=
set tabstop=4
set softtabstop=4
set expandtab
set shiftwidth=4
set smarttab
set number
set showcmd
set cursorline
set wildmenu
set lazyredraw
set showmatch
set incsearch
set hlsearch
set paste

set foldenable
set foldlevelstart=10
set foldnestmax=10
set foldmethod=indent
set runtimepath^=~/.vim/vim-addons/github-ctrlpvim-ctrlp.vim

let mapleader=","
let g:NERDTreeDirArrows=0
let g:multi_cursor_exit_from_insert_mode=0
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v.*(git|hg|svn|node_modules|sass-cache|coverage|dist).*$',
    \ 'file': '\v\.(exe|so|dll|zip|swp|tmp)$',
    \ }
let g:rspec_runner = "os_x_iterm"
let g:rspec_command = "!bundle exec rspec -I . -f d -c $PWD/{spec}"

let g:mocha_js_command = "!mocha --recursive {spec}"

syntax on
filetype plugin indent on

noremap <F7> :Autoformat<CR><CR>
noremap <F8> :CtrlP<CR><CR>

nmap <silent> <C-D> :NERDTreeToggle<CR>
nmap <silent> <C-E> :TagbarToggle<CR>

map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup

au FileType jade setl sw=2 sts=2 et
au FileType styl setl sw=2 sts=2 et
